Implement a group_by_owners function that:

Accepts a hash containing the file owner name for each file name.
Returns a hash containing an array of file names for each owner name, in any order.
For example, for hash {'Input.txt' => 'Randy', 'Code.py' => 'Stan', 'Output.txt' => 'Randy'} the group_by_owners function should return {'Randy' => ['Input.txt', 'Output.txt'], 'Stan' => ['Code.py']}.

Ruby 2.2.2

------------------
module FileOwners
  def self.group_by_owners(files)
    return nil
  end
end

files = {
  'Input.txt' => 'Randy',
  'Code.py' => 'Stan',
  'Output.txt' => 'Randy'
}
puts FileOwners.group_by_owners(files)



https://www.testdome.com/questions/ruby/file-owners/9762?testId=66&testDifficulty=Easy

------
Answer
------
module FileOwners
  def self.sample_data
    return {'Input.txt' => 'Randy', 'Code.py' => 'Stan', 'Output.txt' => 'Randy'}
  end
  def self.group_by_owners(files)
    result = Hash.new
    files.values.uniq.each do |a|
      result[a] = files.select{|key, hash| hash == a }.keys
    end
    return result
  end
end
